trigger ServiceLineItemsTrigger on Service_Line_Items__c (after insert, after update, after delete, after undelete) {
    
    // Set to store unique Service Request IDs to update later
    Set<Id> serviceRequestIds = new Set<Id>();
    
    // Add Service Request IDs for all the records being processed
    if (Trigger.isInsert || Trigger.isUpdate || Trigger.isUndelete) {
        for (Service_Line_Items__c lineItem : Trigger.new) {
            serviceRequestIds.add(lineItem.Service_Request__c);
        }
    }
    
    if (Trigger.isDelete) {
        for (Service_Line_Items__c lineItem : Trigger.old) {
            serviceRequestIds.add(lineItem.Service_Request__c);
        }
    }
    
    // Map to hold total costs for each Service Request
    Map<Id, Decimal> serviceRequestCosts = new Map<Id, Decimal>();

    // Query related Service Line Items for all impacted Service Requests
    List<Service_Line_Items__c> lineItems = [
        SELECT Service_Request__c, Quantity_Used__c, Inventory_Item__r.Cost_Per_Unit__c
        FROM Service_Line_Items__c
        WHERE Service_Request__c IN :serviceRequestIds
    ];
    
    // Calculate total cost for each Service Request
    for (Service_Line_Items__c lineItem : lineItems) {
        Decimal lineItemCost = lineItem.Quantity_Used__c * lineItem.Inventory_Item__r.Cost_Per_Unit__c;
        
        if (serviceRequestCosts.containsKey(lineItem.Service_Request__c)) {
            serviceRequestCosts.put(lineItem.Service_Request__c, serviceRequestCosts.get(lineItem.Service_Request__c) + lineItemCost);
        } else {
            serviceRequestCosts.put(lineItem.Service_Request__c, lineItemCost);
        }
    }
    
    // Prepare list to update Service Requests with new total cost
    List<Service_Request__c> serviceRequestsToUpdate = new List<Service_Request__c>();
    
    for (Id serviceRequestId : serviceRequestCosts.keySet()) {
        serviceRequestsToUpdate.add(new Service_Request__c(
            Id = serviceRequestId,
            Total_Cost__c = serviceRequestCosts.get(serviceRequestId)
        ));
    }
    
    // Update Service Requests with the new total costs
    if (!serviceRequestsToUpdate.isEmpty()) {
        update serviceRequestsToUpdate;
    }
}
